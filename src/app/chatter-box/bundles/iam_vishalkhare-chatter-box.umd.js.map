{"version":3,"file":"iam_vishalkhare-chatter-box.umd.js","sources":["ng://@iam_vishalkhare/chatter-box/lib/chatter-box.component.ts","ng://@iam_vishalkhare/chatter-box/lib/chatter-box.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {isUndefined} from \"util\";\n\nexport interface CommentPayload {\n  msgId: number;\n  userId?: number | string;\n  msg: string;\n  timestamp: string;\n  userName: string;\n  userImagePath?: string;\n}\n\n\n@Component({\n  selector: 'vis-chatterBox',\n  template: `\n  <div class=\"vis-chat-window\">\n    <div class=\"vis-chat-window-header\">\n    <img *ngIf=\"headerImage !== null && headerImage !== undefined\"\n                            [src]=\"headerImage\"\n                            alt=\"user\"\n                            class=\"user-image\"/>\n        <div class=\"vis-chat-window-header-text\">\n            {{heading}}\n        </div>\n    </div>\n    <div class=\"vis-chat-window-body\" #scrollMe [scrollTop]=\"scrollMe.scrollHeight\">\n        <div class=\"error-div\" *ngIf=\"showErrorDiv\">\n            {{errorMsg}}\n        </div>\n        <div *ngIf=\"!showErrorDiv\">\n            <div *ngFor=\"let comment of allComments\">\n              <div [ngClass]=\"(comment.userId !== null && comment.userId !== undefined) ? ((comment.userId == currentUserId) ? 'comment-currentUser' : 'comment') :'comment'\">\n                <div class=\"col-2\">\n                    <img *ngIf=\"!showImageOrDiv(comment)\"\n                            src=\"{{comment.userImagePath}}\"\n                            alt=\"user\"\n                            class=\"user-image\"\n                    />\n                    <div *ngIf=\"showImageOrDiv(comment)\" class=\"user-image color-gray\">\n                      {{comment.userName[0]}}\n                    </div>\n                </div>\n                <div class=\"comment-bubble col-10\" [ngClass]=\"(comment.userId !== null && comment.userId !== undefined) ? ((comment.userId == currentUserId) ? 'comment-bubble-currentUser col-10' : 'comment-bubble col-10') :'comment-bubble col-10'\">\n                    <div [ngClass]=\"(comment.userId !== null && comment.userId !== undefined) ? ((comment.userId == currentUserId) ? 'user-name' : 'user-name color-gray') :'user-name color-gray'\">\n                        {{comment.userName}}\n                    </div>\n                    <div [ngClass]=\"(comment.userId !== null && comment.userId !== undefined) ? ((comment.userId == currentUserId) ? 'user-comment' : 'user-comment color-gray') :'user-comment color-gray'\">\n                        {{comment.msg}}\n                    </div>\n                    <div [ngClass]=\"(comment.userId !== null && comment.userId !== undefined) ? ((comment.userId == currentUserId) ? 'timestamp' : 'timestamp color-gray') :'timestamp color-gray'\">\n                        {{comment.timestamp}}\n                    </div>\n                </div>\n              </div>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"vis-chat-window-footer\">\n        <div>\n          <input type=\"text\" id=\"vis-comment-textField\" placeholder=\"{{placeholderText}}\"\n                [(ngModel)]=\"commentText\"\n                (keyup.enter)=\"addComment(commentText)\"\n                (keyup)=\"onKeyUp(commentText)\"\n                maxlength=\"{{inputMaxLength}}\">\n        </div>\n        <div class=\"character-count\">\n            {{typedCommentTextLength}} / {{inputMaxLength}} characters\n        </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .vis-chat-window {\n      display: flex;\n      flex-direction: column;\n      font-family: 'Roboto';\n    }\n    .vis-chat-window-header {\n      display: flex;\n      justify-content: flex-start;\n      background-color: #215AA8;\n      color: #ffffff;\n      padding: 0.8em;\n      border-top-right-radius: 10px;\n      border-top-left-radius: 10px;\n    }\n    .vis-chat-window-body {\n      height: -webkit-fill-available;\n      overflow: scroll;\n      display: inline-grid;\n      border-right: #215AA8 solid 1px;\n      border-left: #215AA8 solid 1px;\n    }\n    .vis-chat-window-footer {\n      display: flex;\n      flex-direction: column;\n      width: -webkit-fill-available;\n      background-color: #215AA8;\n      border-bottom-right-radius: 10px;\n      border-bottom-left-radius: 10px;\n      border-right: #215AA8 solid 1px;\n      border-left: #215AA8 solid 1px;\n    }\n    .vis-chat-window-header-text {\n      font-size: 1.5em;\n      font-weight: bold;\n      vertical-align: middle;\n      line-height: 50px;\n      margin-left: 0.8em;\n    }\n    .vis-chat-window-header-minimize:hover {\n      background-color: #204589;\n    }\n    #vis-comment-textField {\n      width: -webkit-fill-available;\n      font-size: 18px;\n      padding-top: 0.8em;\n      padding-bottom: 0.8em;\n      padding-left: 0.8em;\n      text-decoration: none;\n      border: none;\n      border-top: 1px solid #215AA8;\n      border-bottom: 1px solid #215AA8;\n      border-right: #215AA8 solid 0.5px;\n      border-left: #215AA8 solid 0.5px;\n    }\n    #vis-comment-textField:focus {\n      outline: none;\n    }\n    ::ng-deep .cdk-overlay-pane .chatBox {\n      min-width: 400px;\n      border: 1px solid #4f4f4f;\n    }\n    ::ng-deep .cdk-overlay-pane .mat-menu-content {\n      padding: 0px !important;\n      overflow: unset !important;\n    }\n    ::ng-deep .cdk-overlay-pane .mat-menu-panel {\n      overflow: unset !important;\n    }\n    ::placeholder {\n      /* Firefox, Chrome, Opera */\n      font-size: 14px;\n      color: #8c8c8c;\n    }\n    :-ms-input-placeholder {\n      /* Internet Explorer 10-11 */\n      font-size: 14px;\n    }\n    ::-ms-input-placeholder {\n      /* Microsoft Edge */\n      font-size: 14px;\n    }\n    .comment {\n      display: flex;\n      justify-content: space-between;\n      margin: 0.6em;\n    }\n    .comment-currentUser {\n      display: flex;\n      justify-content: space-between;\n      flex-direction: row-reverse;\n      margin: 0.6em;\n    }\n    .user-image {\n      height: 50px;\n      width: 50px;\n      border-radius: 500px;\n      border: #838384 solid 1px;\n      text-align: center;\n      vertical-align: middle;\n      line-height: 50px;\n      font-size: 24px;\n    }\n    .comment-bubble {\n      background-color: #F6F5F8;\n      margin-left: 0.3em;\n      margin-right: 0.3em;\n      width: -webkit-fill-available;\n      border-top-right-radius: 15px;\n      border-bottom-right-radius: 15px;\n      border-bottom-left-radius: 15px;\n      color: #000000;\n      padding: 1em;\n      font-size: 0.8em;\n    }\n\n    .comment-bubble-currentUser{\n      background-color: #215AA8;\n      margin-left: 0.3em;\n      margin-right: 0.3em;\n      width: -webkit-fill-available;\n      border-top-left-radius: 15px;\n      border-bottom-right-radius: 15px;\n      border-bottom-left-radius: 15px;\n      border-top-right-radius: 0px;\n      color: #ffffff;\n      padding: 1em;\n      font-size: 0.8em;\n    }\n    .user-name {\n      color: #FAFAFA;\n      font-weight: bolder;\n      font-size: 1.1em;\n    }\n    .color-gray {\n      color: #838384;\n    }\n    .timestamp {\n      bottom: 0px;\n      font-size: 0.6em;\n      float: right;\n      font-style: italic;\n    }\n    .error-div {\n      color: #828282;\n      text-align: center;\n      margin-top: 10em;\n    }\n    .character-count {\n      font-size: 0.8em;\n      float: right;\n      color: #ffffff;\n      margin-right: 0.5em;\n      font-style: italic;\n      padding: 0.5em;\n    }\n    `\n  ]\n})\n\nexport class ChatterBoxComponent implements OnInit {\n\n  @Input() heading: string;\n  @Input() headerImage: string;\n  @Input() showErrorDiv: boolean;\n  @Input() errorMsg: string;\n  @Input() allComments: Array<CommentPayload>;\n  @Input() inputMaxLength: number;\n  @Input() placeholderText: string;\n  @Input() currentUserId: number | string;\n  @Output() onKeyupEnter: EventEmitter<string> = new EventEmitter<string>();\n  @Output() onKeyup: EventEmitter<string> = new EventEmitter<string>();\n\n\n  commentText: string;\n  typedCommentTextLength: number = 0;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  showImageOrDiv(comment: CommentPayload): boolean {\n    return isUndefined(comment.userImagePath);\n  }\n\n  addComment(comment: string) {\n    this.onKeyupEnter.emit(comment);\n    this.commentText = '';\n  }\n\n  onKeyUp(input: string) {\n    this.onKeyup.emit(input);\n    this.typedCommentTextLength = input.length;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ChatterBoxComponent } from './chatter-box.component';\n\n@NgModule({\n  declarations: [ChatterBoxComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule\n  ],\n  exports: [ChatterBoxComponent]\n})\nexport class ChatterBoxModule { }\n"],"names":["EventEmitter","isUndefined","Component","Input","Output","NgModule","CommonModule","BrowserModule","FormsModule"],"mappings":";;;;;;;;;;IAAA;;;IAGA,6BAOC;;;QANC,+BAAc;;QACd,gCAAyB;;QACzB,6BAAY;;QACZ,mCAAkB;;QAClB,kCAAiB;;QACjB,uCAAuB;;AAIzB;QA8OE;YAPU,iBAAY,GAAyB,IAAIA,iBAAY,EAAU,CAAC;YAChE,YAAO,GAAyB,IAAIA,iBAAY,EAAU,CAAC;YAIrE,2BAAsB,GAAW,CAAC,CAAC;SAElB;;;;QAEjB,sCAAQ;;;QAAR;SACC;;;;;QAED,4CAAc;;;;QAAd,UAAe,OAAuB;YACpC,OAAOC,gBAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;SAC3C;;;;;QAED,wCAAU;;;;QAAV,UAAW,OAAe;YACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;;;;;QAED,qCAAO;;;;QAAP,UAAQ,KAAa;YACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,MAAM,CAAC;SAC5C;;oBA/PFC,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,s+FAyDT;iCAEC,28HA4JC;qBAEJ;;;;;8BAIEC,UAAK;kCACLA,UAAK;mCACLA,UAAK;+BACLA,UAAK;kCACLA,UAAK;qCACLA,UAAK;sCACLA,UAAK;oCACLA,UAAK;mCACLC,WAAM;8BACNA,WAAM;;QAwBT,0BAAC;KAhQD,IAgQC;;;QAjCC,sCAAyB;;QACzB,0CAA6B;;QAC7B,2CAA+B;;QAC/B,uCAA0B;;QAC1B,0CAA4C;;QAC5C,6CAAgC;;QAChC,8CAAiC;;QACjC,4CAAwC;;QACxC,2CAA0E;;QAC1E,sCAAqE;;QAGrE,0CAAoB;;QACpB,qDAAmC;;;;;;;ACzPrC;QAMA;SASiC;;oBAThCC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE;4BACPC,mBAAY;4BACZC,6BAAa;4BACbC,iBAAW;yBACZ;wBACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B;;QAC+B,uBAAC;KATjC;;;;;;;;;;;;;"}